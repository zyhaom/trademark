package com.servlet.search;

import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.TreeMap;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.log4j.Logger;

import com.dll.tm.TradeMarkDll;
import com.util.CommUtil;
import com.util.JsonUtil;
import com.util.prop.CommParameter;

//{"goalPicDirFullPath":"E:\\trademark\\temp\\img\\1.png","datDirFullPath":"E:\\trademark\\dat\\01\\01","precision":"0.205"}
public class CopyOfFetchsimilarSB extends HttpServlet {

	private final static Logger log = Logger.getLogger(CopyOfFetchsimilarSB.class);
	private static final long serialVersionUID = 1L;

	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		resp.setContentType("text/html;charset=UTF-8");
		resp.setCharacterEncoding("UTF-8");
		req.setCharacterEncoding("UTF-8");
		PrintWriter out = resp.getWriter();
		Map<String,Object> outMap = new HashMap<String, Object>();
		
		try {
			
			String token = req.getParameter("token")==null?"":req.getParameter("token").trim();
			if(!CommUtil.tokenMapCheck(token)){
				outMap.put("getCode", "-1");
			}else{
				
	//			{"goalPicDirFullPath ":"?","datDirFullPath":"?","precision":"0.3"}
				String s = CommUtil.fetchPostStrFun(req);
					
				String goalPicDirFullPath = null;
				String datDirFullPath = null;
				float precision = 0.3f;
				Map map4Json = JsonUtil.getMap4Json(s);
				goalPicDirFullPath = map4Json.get("goalPicDirFullPath").toString();
				datDirFullPath = map4Json.get("datDirFullPath").toString();
				precision = Float.parseFloat(map4Json.get("precision").toString());
				
				
				//1.涓存椂鐨刣at鏂囦欢鍏ㄨ矾寰�
				String tempDatFullPath = TradeMarkDll.callBuildFeature(goalPicDirFullPath, CommParameter.getCommParameterByKey("tempDir")+File.separator+"dat", "pn_"+System.currentTimeMillis()+".dat");
				//2.鍟嗘爣妫�储鍧�
				if(tempDatFullPath != null){
					List<Entry<Object, Object>> l = searchFunc(datDirFullPath, precision, tempDatFullPath);
					
//					log.info(l);
//					out.print(l);
					
					outMap.put("getCode", "0");
					outMap.put("getMessage", "鑾峰彇鎴愬姛");
					outMap.put("bigclassid", "");
					outMap.put("bigclassname", "");
					outMap.put("bigclassname", "");
					
					
				}else{//鏃犵浉浼肩殑銆�
//					log.info("no");
//					out.print("no");
					
					
				}
				
				//3.鍒犻櫎涓存椂鐨刣at鏂囦欢
				if(tempDatFullPath != null){
					//			new File(tempDatFullPath).deleteOnExit();
					new File(tempDatFullPath).delete();
				}
			}
			
			
			String sentStr = JsonUtil.mapToJson(outMap);
			log.info(sentStr);
			out.print(sentStr.getBytes("utf-8"));
			
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			out.close();
		}
	}

	/**
	 * 
	 * @Author:HaoMing(閮濇槑)
	 * @Project_name:trademark
	 * @Full_path:com.servlet.search.FetchsimilarSB.java
	 * @Date:@2017 2017-3-27 涓嬪崍5:41:25
	 * @Return_type:List<Entry<Object,Object>>
	 * @Desc :鍟嗘爣妫�储鏂规硶
	 */
	public static List<Entry<Object, Object>> searchFunc(String datDirFullPath, float precision, String tempDatFullPath) {
		Map<Object, Object> m = new TreeMap<Object, Object>();
		float tempFloat = 0f;//涓存椂鐩镐技璺濈
//				float precision = 0.3f;//闃��绮惧害
		
		File[] fs = new File(datDirFullPath).listFiles();
		for (int i = 0; i < fs.length; i++) {
			tempFloat = Float.parseFloat(TradeMarkDll.callSearch(tempDatFullPath,fs[i].toString(),precision));
			if(tempFloat<=precision){
				String datPathID = fs[i].toString();
				datPathID = datPathID.replace("E:\\trademark\\dat\\", "");
				datPathID = datPathID.substring(0,datPathID.lastIndexOf("."));
				m.put(datPathID, String.valueOf(tempFloat));
			}
		}
		
		List<Entry<Object,Object>> l = CommUtil.orderMap(m);//鎺掑簭
		return l;
	}
	
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		resp.setContentType("text/html;charset=UTF-8");
		resp.setCharacterEncoding("UTF-8");
		req.setCharacterEncoding("UTF-8");
		doPost(req, resp);

//		System.out.println(TradeMarkDll.callInit("D:\\ftp_folder\\pic_search\\1","D:\\ftp_folder\\pic_search\\2"));
//		System.out.println(TradeMarkDll.callBuildFeature("D:\\ftp_folder\\pic_search\\1\\0.jpg", "D:\\ftp_folder\\pic_search\\3", "1.dat"));
//		System.out.println(TradeMarkDll.callSearch("D:\\ftp_folder\\pic_search\\3\\3-1.dat","D:\\ftp_folder\\pic_search\\3\\3-2.dat",0.25f));
	}
	
	public static void main(String[] args) {
//		System.out.println(System.currentTimeMillis());//1489643427749
		
		/*Map<String, String> map = new TreeMap<String, String>();
		map.put("k", "dsfaertw5364643");
		map.put("b", "adfasdf");
		map.put("a", "asfdasdf");
		
		Iterator<?> it = map.keySet().iterator();
		while(it.hasNext()){
			String key = (String)it.next();
			System.out.println(key+":"+map.get(key));
		}*/
		
//		String s = "E:\\trademark\\dat\\01\\01\\10_129.dat";
//		System.out.println(s);
//		s = s.replace("E:\\trademark\\dat\\", "");
//		System.out.println(s);
//		s = s.substring(0,s.lastIndexOf("."));
//		System.out.println(s);
		
		
		/*String s = "";
		for (int i = 0; i < 100; i++) {
			s += "01\\01\\10_129~";
		}
		
		System.out.println(s.length());
		System.out.println(s);*/
		
		
	}
	
}
